{"version":3,"sources":["Contact.js","Allcontacts.js","Linlot.js","App.js","index.js"],"names":["Contact","id","props","state","display","handleClick","event","preventDefault","setState","className","onClick","this","name","email","React","Component","Allcontacts","contactInfo","info","feed","entry","token","res","map","member","key","$t","title","gd$email","address","length","CLIENT_ID","Linlot","isLogined","accessToken","login","bind","handleLoginFailure","logout","handleLogoutFailure","response","axios","get","headers","Authorization","data","console","log","onSubmit","alert","clientId","buttonText","onLogoutSuccess","onFailure","onSuccess","cookiePolicy","responseType","App","isLogin","contacts","handleLogin","ReactDOM","render","document","getElementById"],"mappings":"gPAuBeA,E,4MArBbC,GAAK,EAAKC,MAAMD,G,EAChBE,MAAQ,CAAEC,QAAS,Q,EACnBC,YAAc,SAACC,GACbA,EAAMC,iBACN,EAAKC,SAAS,CACZJ,QAAgC,SAAvB,EAAKD,MAAMC,QAAqB,SAAW,U,uDAKtD,OACE,yBAAKK,UAAU,cAAcC,QAASC,KAAKN,aACzC,0BAAMI,UAAU,SACbE,KAAKT,MAAMU,MAEd,0BAAMH,UAAU,SAASE,KAAKT,MAAMW,Y,GAhBtBC,IAAMC,WCiCbC,E,4MA9Bbb,MAAQ,CACNc,YAAa,EAAKf,MAAMgB,KAAKC,KAAKC,O,EAEpCC,MAAQ,EAAKnB,MAAMmB,M,uDAEjB,IAAIC,EAAMX,KAAKR,MAAMc,YAAYM,KAAI,SAACC,GACpC,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAOvB,GAAGyB,GACfzB,GAAIuB,EAAOvB,GAAGyB,GACdd,KAAMY,EAAOG,MAAMD,GACnBb,MAAOW,EAAOI,SAAWJ,EAAOI,SAAS,GAAGC,QAAU,UAI5D,OACE,yBAAKpB,UAAU,OACb,yBAAKA,UAAU,gBAAf,aACaE,KAAKR,MAAMc,YAAYa,OADpC,KAGA,yBAAKrB,UAAU,eACb,0BAAMA,UAAU,qBAAhB,QACA,0BAAMA,UAAU,qBAAhB,UAEF,yBAAKA,UAAU,wBAAwBa,Q,GAzBrBR,IAAMC,W,uDCG1BgB,EAAY,2EAqFHC,E,kDA9EZ,WAAY9B,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAQ,CACX8B,WAAW,EAEXC,YAAa,IAGf,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,OAAS,EAAKA,OAAOF,KAAZ,gBACd,EAAKG,oBAAsB,EAAKA,oBAAoBH,KAAzB,gBAZT,E,2FAgBPI,G,6EAERA,EAASN,Y,gCAMSO,IAAMC,IACvB,iFACA,CACEC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASN,gB,OAJlChB,E,OAQA2B,EAAO3B,EAAK2B,KAClBC,QAAQC,IAAIF,GACZlC,KAAKT,MAAM8C,UAAS,EAAMH,EAAKL,EAASN,a,oIAIpCM,GACN7B,KAAKH,UAAS,SAAAL,GAAK,MAAK,CACtB8B,WAAW,EACXC,YAAa,S,yCAIGM,GAClBS,MAAM,sB,0CAGaT,GACnBS,MAAM,uB,+BAIN,OACA,6BACItC,KAAKR,MAAM8B,UACX,kBAAC,eAAD,CACEiB,SAAWnB,EACXoB,WAAW,SACXC,gBAAkBzC,KAAK2B,OACvBe,UAAY1C,KAAK4B,sBAEF,kBAAC,cAAD,CACfW,SAAWnB,EACXoB,WAAW,QACXG,UAAY3C,KAAKwB,MACjBkB,UAAY1C,KAAK0B,mBACjBkB,aAAe,qBACfC,aAAa,oB,GAvEFzC,aCeN0C,E,4MApBbtD,MAAQ,CACNuD,SAAS,EACTC,SAAU,KACVtC,MAAO,M,EAETuC,YAAc,SAACF,EAASC,EAAUtC,GAChC,EAAKb,SAAS,CAAEkD,QAASA,EAASC,SAAUA,EAAUtC,MAAOA,K,uDAI7D,OAAOV,KAAKR,MAAMuD,QAChB,6BACE,kBAAC,EAAD,CAAaxC,KAAMP,KAAKR,MAAMwD,SAAUtC,MAAOV,KAAKR,MAAMkB,SAG5D,kBAAC,EAAD,CAAQ2B,SAAUrC,KAAKiD,kB,GAhBX9C,IAAMC,WCAxB8C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.da07cb82.chunk.js","sourcesContent":["import React from \"react\";\r\nclass Contact extends React.Component {\r\n  id = this.props.id;\r\n  state = { display: \"none\" };\r\n  handleClick = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      display: this.state.display === \"none\" ? \"inline\" : \"none\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='card-layout' onClick={this.handleClick}>\r\n        <span className='card1'>\r\n          {this.props.name}\r\n        </span>\r\n        <span className='card2'>{this.props.email}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport Contact from \"./Contact\";\r\n\r\nclass Allcontacts extends React.Component {\r\n  state = {\r\n    contactInfo: this.props.info.feed.entry,\r\n  };\r\n  token = this.props.token;\r\n  render() {\r\n    let res = this.state.contactInfo.map((member) => {\r\n      return (\r\n        <Contact\r\n          key={member.id.$t}\r\n          id={member.id.$t}\r\n          name={member.title.$t}\r\n          email={member.gd$email ? member.gd$email[0].address : \"NA\"}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className='top'>\r\n        <div className='contact-word'>\r\n          Contacts ({this.state.contactInfo.length})\r\n        </div>\r\n        <div className='column-name'>\r\n          <span className='column-name-list '>NAME</span>\r\n          <span className='column-name-list '>EMAIL</span>\r\n        </div>\r\n        <div className='fixedHeightContainer'>{res}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Allcontacts;","import React, { Component } from 'react'\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport axios from \"axios\";\r\n//import GoogleContacts from 'react-google-contacts';\r\n\r\n\r\nconst CLIENT_ID = '252669349047-sslescsn58s9ojlifuov3o0303v934qr.apps.googleusercontent.com';\r\nconst responseCallback = (response) => {\r\n    //console.log(response);\r\n  }\r\n\r\nclass Linlot extends Component {\r\n   \r\n   constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLogined: false,\r\n\r\n      accessToken: ''\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\r\n  }\r\n \r\n\r\n  async login (response) {\r\n\r\n    if(response.accessToken){\r\n        //console.log(response.accessToken)\r\n      /*this.setState(state => ({\r\n        isLogined: true,\r\n        accessToken: response.accessToken\r\n      }));*/\r\n      const info = await axios.get(\r\n        \"https://www.google.com/m8/feeds/contacts/default/full?alt=json&max-results=300\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${response.accessToken}`,\r\n          },\r\n        }\r\n      );\r\n      const data = info.data;\r\n      console.log(data);\r\n      this.props.onSubmit(true, data,response.accessToken);\r\n    }\r\n  }\r\n\r\n  logout (response) {\r\n    this.setState(state => ({\r\n      isLogined: false,\r\n      accessToken: ''\r\n    }));\r\n  }\r\n\r\n  handleLoginFailure (response) {\r\n    alert('Failed to log in')\r\n  }\r\n\r\n  handleLogoutFailure (response) {\r\n    alert('Failed to log out')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n      { this.state.isLogined ?\r\n        <GoogleLogout\r\n          clientId={ CLIENT_ID }\r\n          buttonText='Logout'\r\n          onLogoutSuccess={ this.logout }\r\n          onFailure={ this.handleLogoutFailure }\r\n        >\r\n        </GoogleLogout>: <GoogleLogin\r\n          clientId={ CLIENT_ID }\r\n          buttonText='Login'\r\n          onSuccess={ this.login }\r\n          onFailure={ this.handleLoginFailure }\r\n          cookiePolicy={ 'single_host_origin' }\r\n          responseType='code,token'\r\n        />\r\n      }\r\n      \r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Linlot;","import React from \"react\";\nimport Allcontacts from \"./Allcontacts\";\n\nimport Linlot from \"./Linlot\";\n\nclass App extends React.Component {\n  state = {\n    isLogin: false,\n    contacts: null,\n    token: null,\n  };\n  handleLogin = (isLogin, contacts, token) => {\n    this.setState({ isLogin: isLogin, contacts: contacts, token: token });\n  };\n  render() {\n    // return <Login onSubmit={this.handleLogin} />;\n    return this.state.isLogin ? (\n      <div>\n        <Allcontacts info={this.state.contacts} token={this.state.token} />\n      </div>\n    ) : (\n      <Linlot onSubmit={this.handleLogin} />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}